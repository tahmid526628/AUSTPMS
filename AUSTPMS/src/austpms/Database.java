/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package austpms;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tahmid
 */
public class Database extends javax.swing.JFrame {

    /**
     * Creates new form Database
     */
    
    private final int screenWidth = 960 + 200;
    private final int screenHeight = 650;
    
    public Database() {
        initComponents();
        screenShowing();
    }

    
    private void screenShowing(){
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setSize(screenWidth, screenHeight);
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
        
        mainPanel.setPreferredSize(new Dimension(screenWidth, screenHeight));
        
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.insertRow(model.getRowCount(), new Object[]{"habijabi","habijabi1","habijabi2","habijabi3","habijabi","habijabi1","habijabi2","habijabi3",
        "habijabi2","habijabi3"});
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        itemSelectCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        imagePanel = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        deptCombo = new javax.swing.JComboBox<>();
        professionCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AUST Parking Management System");
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(51, 51, 51));
        mainPanel.setPreferredSize(new java.awt.Dimension(1160, 550));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setBackground(new java.awt.Color(0, 255, 153));
        backButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        mainPanel.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, 120, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Select Department");
        mainPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        itemSelectCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemSelectCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Search profession wise", "Search department wise", "Search using ID", "All" }));
        itemSelectCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSelectComboActionPerformed(evt);
            }
        });
        mainPanel.add(itemSelectCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 190, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Profession", "Department", "Mobile", "Vehicle Type", "Vehicle Model", "Vehicle Number", "Vehicle Color", "Expiry Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
            jTable1.getColumnModel().getColumn(9).setResizable(false);
        }

        mainPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 1120, 360));

        imagePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imageLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        imageLabel.setText("Image");
        imagePanel.add(imageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        mainPanel.add(imagePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 20, 150, 160));

        idField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        idField.setEnabled(false);
        idField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                idFieldMousePressed(evt);
            }
        });
        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });
        mainPanel.add(idField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 190, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID");
        mainPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        deptCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deptCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "CSE" }));
        deptCombo.setEnabled(false);
        deptCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptComboActionPerformed(evt);
            }
        });
        mainPanel.add(deptCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 190, -1));

        professionCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        professionCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Teacher", "Student", "Staff" }));
        professionCombo.setEnabled(false);
        professionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                professionComboActionPerformed(evt);
            }
        });
        mainPanel.add(professionCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 190, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Select here");
        mainPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Select profession");
        mainPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Home home = new Home();
        home.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void itemSelectComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSelectComboActionPerformed
        // TODO add your handling code here:
        if(itemSelectCombo.getSelectedIndex() == 3){// usnig ID
            idField.setEnabled(true);
            professionCombo.setEnabled(false);
            deptCombo.setEnabled(false);
            jTable1.setModel(new DefaultTableModel(null, new Object[]{"Name","ID","Profession","Department","Mobile",
                    "Vehicle Type","Vehicle Model","Vehicle Number","Vehicle Color","Expiry Date"}));
            
        }
        else{
            idField.setEnabled(false);
            professionCombo.setEnabled(false);
            deptCombo.setEnabled(false);
            if(itemSelectCombo.getSelectedIndex() == 4){ //all
                jTable1.setModel(new DefaultTableModel(null, new Object[]{"Name","ID","Profession","Department","Mobile",
                    "Vehicle Type","Vehicle Model","Vehicle Number","Vehicle Color","Expiry Date"}));
                try {
                    ConnectDatabase connectDatabase = new ConnectDatabase();
                    connectDatabase.ConnectDB();
                    
                    connectDatabase.retrieveFullData();
                    connectDatabase.getExtraResultSet();
                    DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                    while(connectDatabase.getExtraResultSet().next()){
                        //System.out.println(connectDatabase.getExtraResultSet().getString("FirstName"));
                        String name = connectDatabase.getExtraResultSet().getString("FirstName") + " " 
                                + connectDatabase.getExtraResultSet().getString("LastName");
                        model.insertRow(model.getRowCount(), new Object[]{name,
                        connectDatabase.getExtraResultSet().getString("ID"),
                        connectDatabase.getExtraResultSet().getString("Profession"),
                        connectDatabase.getExtraResultSet().getString("Department"),
                        connectDatabase.getExtraResultSet().getString("Mobile"),
                        connectDatabase.getExtraResultSet().getString("VehicleType"),
                        connectDatabase.getExtraResultSet().getString("VehicleModel"),
                        connectDatabase.getExtraResultSet().getString("VehicleNumber"),
                        connectDatabase.getExtraResultSet().getString("VehicleColor"),
                        connectDatabase.getExtraResultSet().getString("ExpiryDate")});
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(itemSelectCombo.getSelectedIndex() == 1){// using Profession
                idField.setEnabled(false);
                professionCombo.setEnabled(true);
                deptCombo.setEnabled(false);
                jTable1.setModel(new DefaultTableModel(null, new Object[]{"Name","ID","Profession","Department","Mobile",
                    "Vehicle Type","Vehicle Model","Vehicle Number","Vehicle Color","Expiry Date"}));
                
                
            }
            else if(itemSelectCombo.getSelectedIndex() == 2){ // using Dept.
                idField.setEnabled(false);
                professionCombo.setEnabled(false);
                deptCombo.setEnabled(true);
                jTable1.setModel(new DefaultTableModel(null, new Object[]{"Name","ID","Profession","Department","Mobile",
                    "Vehicle Type","Vehicle Model","Vehicle Number","Vehicle Color","Expiry Date"}));
                
            }
            else{
                jTable1.setModel(new DefaultTableModel(null, new Object[]{"Name","ID","Profession","Department","Mobile",
                    "Vehicle Type","Vehicle Model","Vehicle Number","Vehicle Color","Expiry Date"}));
            }
            
        }
    }//GEN-LAST:event_itemSelectComboActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        ConnectDatabase connectDatabase = new ConnectDatabase();
        connectDatabase.ConnectDB();   
        
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();
        String id = model.getValueAt(selectedRowIndex, 1).toString();
        //byte[] photo;
        
            try{
                connectDatabase.retrieveOnlyPhoto(id);
//                connectDatabase.getExtraResultSet();
//                while(connectDatabase.getExtraResultSet().next()){
//                    photo = connectDatabase.getExtraResultSet().getBytes("Photo");
//                }
                /******************set image(covert byte array to ImageIcon*************/
                byte[] pic = connectDatabase.getPhoto();        
                ImageIcon img = new ImageIcon(pic);
                Image image = img.getImage();
                Image myImg;
                myImg = image.getScaledInstance(imagePanel.getWidth(), imagePanel.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImg = new ImageIcon(myImg);
                imageLabel.setText("");
                imageLabel.setIcon(newImg);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Image not found");
                imageLabel.setText("Image");
                imageLabel.setIcon(null);
            }
    }//GEN-LAST:event_jTable1MouseClicked

    private void professionComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_professionComboActionPerformed
        // TODO add your handling code here:
        jTable1.setModel(new DefaultTableModel(null, new Object[]{"Name","ID","Profession","Department","Mobile",
                    "Vehicle Type","Vehicle Model","Vehicle Number","Vehicle Color","Expiry Date"}));
        try {
                    ConnectDatabase connectDatabase = new ConnectDatabase();
                    connectDatabase.ConnectDB();
                    
                    if(professionCombo.getSelectedItem().toString().equals("None")){
                        
                    }else{
                        
                    connectDatabase.retrieveFullDataUsingProf(professionCombo.getSelectedItem().toString());
                    connectDatabase.getExtraResultSet();
                    DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                    while(connectDatabase.getExtraResultSet().next()){
                        //System.out.println(connectDatabase.getExtraResultSet().getString("FirstName"));
                        String name = connectDatabase.getExtraResultSet().getString("FirstName") + " " 
                                + connectDatabase.getExtraResultSet().getString("LastName");
                        model.insertRow(model.getRowCount(), new Object[]{name,
                        connectDatabase.getExtraResultSet().getString("ID"),
                        connectDatabase.getExtraResultSet().getString("Profession"),
                        connectDatabase.getExtraResultSet().getString("Department"),
                        connectDatabase.getExtraResultSet().getString("Mobile"),
                        connectDatabase.getExtraResultSet().getString("VehicleType"),
                        connectDatabase.getExtraResultSet().getString("VehicleModel"),
                        connectDatabase.getExtraResultSet().getString("VehicleNumber"),
                        connectDatabase.getExtraResultSet().getString("VehicleColor"),
                        connectDatabase.getExtraResultSet().getString("ExpiryDate")});
                    }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_professionComboActionPerformed

    private void deptComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptComboActionPerformed
        // TODO add your handling code here:
        jTable1.setModel(new DefaultTableModel(null, new Object[]{"Name","ID","Profession","Department","Mobile",
                    "Vehicle Type","Vehicle Model","Vehicle Number","Vehicle Color","Expiry Date"}));
        if(!deptCombo.getSelectedItem().toString().equals("None")){
            try {
                    ConnectDatabase connectDatabase = new ConnectDatabase();
                    connectDatabase.ConnectDB();
                    
                    
                    connectDatabase.retrieveFullDataUsingDept(deptCombo.getSelectedItem().toString());
                    connectDatabase.getExtraResultSet();
                    DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                    while(connectDatabase.getExtraResultSet().next()){
                        //System.out.println(connectDatabase.getExtraResultSet().getString("FirstName"));
                        String name = connectDatabase.getExtraResultSet().getString("FirstName") + " " 
                                + connectDatabase.getExtraResultSet().getString("LastName");
                        model.insertRow(model.getRowCount(), new Object[]{name,
                        connectDatabase.getExtraResultSet().getString("ID"),
                        connectDatabase.getExtraResultSet().getString("Profession"),
                        connectDatabase.getExtraResultSet().getString("Department"),
                        connectDatabase.getExtraResultSet().getString("Mobile"),
                        connectDatabase.getExtraResultSet().getString("VehicleType"),
                        connectDatabase.getExtraResultSet().getString("VehicleModel"),
                        connectDatabase.getExtraResultSet().getString("VehicleNumber"),
                        connectDatabase.getExtraResultSet().getString("VehicleColor"),
                        connectDatabase.getExtraResultSet().getString("ExpiryDate")});
                    }
            } catch (SQLException ex) {
                    Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deptComboActionPerformed

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
              
        if(idField.getText() == null){
            JOptionPane.showMessageDialog(null, "ID cannot be empty");
        }else{
            try{
                ConnectDatabase connectDatabase = new ConnectDatabase();
                connectDatabase.ConnectDB();
                 connectDatabase.retrieveFullDataUsingID(idField.getText());
                 connectDatabase.getExtraResultSet();
                DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                    while(connectDatabase.getExtraResultSet().next()){
                        //System.out.println(connectDatabase.getExtraResultSet().getString("FirstName"));
                        String name = connectDatabase.getExtraResultSet().getString("FirstName") + " " 
                                + connectDatabase.getExtraResultSet().getString("LastName");
                        model.insertRow(model.getRowCount(), new Object[]{name,
                        connectDatabase.getExtraResultSet().getString("ID"),
                        connectDatabase.getExtraResultSet().getString("Profession"),
                        connectDatabase.getExtraResultSet().getString("Department"),
                        connectDatabase.getExtraResultSet().getString("Mobile"),
                        connectDatabase.getExtraResultSet().getString("VehicleType"),
                        connectDatabase.getExtraResultSet().getString("VehicleModel"),
                        connectDatabase.getExtraResultSet().getString("VehicleNumber"),
                        connectDatabase.getExtraResultSet().getString("VehicleColor"),
                        connectDatabase.getExtraResultSet().getString("ExpiryDate")});
                    }
                }
                catch (SQLException ex) {
                    Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
                }
        } 
    }//GEN-LAST:event_idFieldActionPerformed

    private void idFieldMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idFieldMousePressed
        // TODO add your handling code here:
        if(idField.isEnabled()){
            idField.setText("");
        jTable1.setModel(new DefaultTableModel(null, new Object[]{"Name","ID","Profession","Department","Mobile",
                    "Vehicle Type","Vehicle Model","Vehicle Number","Vehicle Color","Expiry Date"}));
        }
    }//GEN-LAST:event_idFieldMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Database.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Database().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> deptCombo;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JComboBox<String> itemSelectCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JComboBox<String> professionCombo;
    // End of variables declaration//GEN-END:variables
}
