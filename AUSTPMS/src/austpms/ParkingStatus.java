/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package austpms;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Tahmid
 */
public class ParkingStatus extends javax.swing.JFrame {

    /**
     * Creates new form ParkingStatus
     */
    
    /******************screen size****************/
    private final int screenWidth = 960 + 200;
    private final int screenHeight = 550;
    
    /******************table*********************/
    
    
    
    public ParkingStatus() {
        initComponents();
        screenShowing();
        
//        DefaultTableModel tableModel = (DefaultTableModel)jTable1.getModel();
//        tableModel.insertRow(tableModel.getRowCount(), new Object[]{"2020","pro","tahmid","554","02485","212","yes","4654"});
        
        tableHeader();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    private void screenShowing(){
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setSize(screenWidth, screenHeight);
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
        
        mainPanel.setPreferredSize(new Dimension(screenWidth, screenHeight));
        
    }
    
    private void tableHeader(){
        JTableHeader header = jTable1.getTableHeader();
        
        header.setFont(new Font("Tahome", Font.PLAIN, 14));
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        itemSelectCombo = new javax.swing.JComboBox<>();
        backButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AUST Parking Management System");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setBackground(new java.awt.Color(51, 102, 0));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        itemSelectCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemSelectCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Today", "Yesterday", "2 days ago" }));
        itemSelectCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSelectComboActionPerformed(evt);
            }
        });
        mainPanel.add(itemSelectCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 190, -1));

        backButton.setBackground(new java.awt.Color(0, 255, 153));
        backButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        mainPanel.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 110, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Select here");
        mainPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 100, 20));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Profession", "Name", "ID", "Mobile", "Vehicle Number", "Parking Status", "Slot Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(170);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
        }

        mainPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 1130, 330));

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1160, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Home home = new Home();
        home.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void itemSelectComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSelectComboActionPerformed
        // TODO add your handling code here:
        //jTable1.setModel(new DefaultTableModel(null, new Object[]{}));
        if(itemSelectCombo.getSelectedIndex() == 1){ // today
            jTable1.setModel(new DefaultTableModel(null, new Object[]{"Date", "Profession", "Name", "ID", "Mobile",
            "Vehicle Number", " Parking Status", " Slot Number"}));
            try { 
                ConnectDatabase connectDatabase = new ConnectDatabase();
                connectDatabase.ConnectDB();
                Time time = new Time();
                
                connectDatabase.retrieveParkingData(time.getCurrentDate());
                DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                while(connectDatabase.getExtraResultSet().next()){
                    System.out.println("Name: " + connectDatabase.getExtraResultSet().getString("Name"));
                    model.insertRow(model.getRowCount(), new Object[]{connectDatabase.getExtraResultSet().getString("ParkingDate"),
                    connectDatabase.getExtraResultSet().getString("Profession"),
                    connectDatabase.getExtraResultSet().getString("Name"),
                    connectDatabase.getExtraResultSet().getString("ID"),
                    connectDatabase.getExtraResultSet().getString("Mobile"),
                    connectDatabase.getExtraResultSet().getString("VehicleNumber"),
                    connectDatabase.getExtraResultSet().getString("ParkingStatus"),
                    connectDatabase.getExtraResultSet().getString("SlotNumber")});
                }
            } catch (SQLException ex) {
                Logger.getLogger(ParkingStatus.class.getName()).log(Level.SEVERE, null, ex);
            }   
        }
        else if(itemSelectCombo.getSelectedIndex() == 2){ // yesterday
            //JOptionPane.showMessageDialog(null, "under construction");
            jTable1.setModel(new DefaultTableModel(null, new Object[]{"Date", "Profession", "Name", "ID", "Mobile",
            "Vehicle Number", " Parking Status", " Slot Number"}));
            try { 
                ConnectDatabase connectDatabase = new ConnectDatabase();
                connectDatabase.ConnectDB();
                Time time = new Time();
                String timeSplit[] = time.getCurrentDate().split("-", 3);
                //String timeSplit[] = "2020-04-11".split("-", 3);
//                if()
                int day = Integer.parseInt(timeSplit[2]);
                int month = Integer.parseInt(timeSplit[1]);
                int year = Integer.parseInt(timeSplit[0]);
                
                //System.out.println(month);
                /*yesterday making*/
                if(day == 1 && (month==3|| month==5|| month==7|| month==8|| month==10|| month==12)){
                    day = 30;
                    month = month-1;
                }
                else if(day == 1 && month==1){
                    day = 31;
                    month = 12;
                    year = year - 1;
                }
                else if(day == 1 && (month==2|| month==4|| month==6|| month==9|| month==11)){
                    day = 31;
                    month = month -1;
                }
                else{
                    day = day -1;
                }
                String newDate = String.valueOf(year)+"-" + String.valueOf(month)+"-" + String.valueOf(day);
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                newDate = df.format(df.parse(newDate));
                System.out.println(newDate);
//                System.out.println(day);
//                System.out.println(month);
//                System.out.println(year);
                connectDatabase.retrieveParkingData(newDate);
                DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                while(connectDatabase.getExtraResultSet().next()){
                    System.out.println("Name: " + connectDatabase.getExtraResultSet().getString("Name"));
                    model.insertRow(model.getRowCount(), new Object[]{connectDatabase.getExtraResultSet().getString("ParkingDate"),
                    connectDatabase.getExtraResultSet().getString("Profession"),
                    connectDatabase.getExtraResultSet().getString("Name"),
                    connectDatabase.getExtraResultSet().getString("ID"),
                    connectDatabase.getExtraResultSet().getString("Mobile"),
                    connectDatabase.getExtraResultSet().getString("VehicleNumber"),
                    connectDatabase.getExtraResultSet().getString("ParkingStatus"),
                    connectDatabase.getExtraResultSet().getString("SlotNumber")});
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        else if(itemSelectCombo.getSelectedIndex() == 3){ // 2 days ago
            //JOptionPane.showMessageDialog(null, "under construction");
         
            jTable1.setModel(new DefaultTableModel(null, new Object[]{"Date", "Profession", "Name", "ID", "Mobile",
            "Vehicle Number", " Parking Status", " Slot Number"}));
            try { 
                ConnectDatabase connectDatabase = new ConnectDatabase();
                connectDatabase.ConnectDB();
                Time time = new Time();
                String timeSplit[] = time.getCurrentDate().split("-", 3);
                //String timeSplit[] = "2020-04-11".split("-", 3);
//                if()
                int day = Integer.parseInt(timeSplit[2]);
                int month = Integer.parseInt(timeSplit[1]);
                int year = Integer.parseInt(timeSplit[0]);
                
                //System.out.println(month);
                /*yesterday making*/
                if(day == 1 && (month==3|| month==5|| month==7|| month==8|| month==10|| month==12)){
                    day = 29;
                    month = month-1;
                }
                else if(day == 1 && month==1){
                    day = 30;
                    month = 12;
                    year = year - 1;
                }
                else if(day == 1 && (month==2|| month==4|| month==6|| month==9|| month==11)){
                    day = 30;
                    month = month -1;
                }
                else{
                    day = day -2;
                }
                String newDate = String.valueOf(year)+"-" + String.valueOf(month)+"-" + String.valueOf(day);
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                newDate = df.format(df.parse(newDate));
                System.out.println(newDate);
//                System.out.println(day);
//                System.out.println(month);
//                System.out.println(year);
                connectDatabase.retrieveParkingData(newDate);
                DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                while(connectDatabase.getExtraResultSet().next()){
                    System.out.println("Name: " + connectDatabase.getExtraResultSet().getString("Name"));
                    model.insertRow(model.getRowCount(), new Object[]{connectDatabase.getExtraResultSet().getString("ParkingDate"),
                    connectDatabase.getExtraResultSet().getString("Profession"),
                    connectDatabase.getExtraResultSet().getString("Name"),
                    connectDatabase.getExtraResultSet().getString("ID"),
                    connectDatabase.getExtraResultSet().getString("Mobile"),
                    connectDatabase.getExtraResultSet().getString("VehicleNumber"),
                    connectDatabase.getExtraResultSet().getString("ParkingStatus"),
                    connectDatabase.getExtraResultSet().getString("SlotNumber")});
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        else{
            jTable1.setModel(new DefaultTableModel(null, new Object[]{"Date", "Profession", "Name", "ID", "Mobile",
            "Vehicle Number", " Parking Status", " Slot Number"}));
        }
    }//GEN-LAST:event_itemSelectComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ParkingStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ParkingStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ParkingStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ParkingStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ParkingStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> itemSelectCombo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
}
